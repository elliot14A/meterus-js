// source: validation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
goog.exportSymbol('proto.meterus.validation.v1.GetEntitlementValueRequest', null, global);
goog.exportSymbol('proto.meterus.validation.v1.GetEntitlementValueResponse', null, global);
goog.exportSymbol('proto.meterus.validation.v1.Metadata', null, global);
goog.exportSymbol('proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest', null, global);
goog.exportSymbol('proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse', null, global);
goog.exportSymbol('proto.meterus.validation.v1.ValidateApiKeyRequest', null, global);
goog.exportSymbol('proto.meterus.validation.v1.ValidateApiKeyResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.ValidateApiKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.validation.v1.ValidateApiKeyRequest.repeatedFields_, null);
};
goog.inherits(proto.meterus.validation.v1.ValidateApiKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.ValidateApiKeyRequest.displayName = 'proto.meterus.validation.v1.ValidateApiKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.ValidateApiKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.ValidateApiKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.ValidateApiKeyResponse.displayName = 'proto.meterus.validation.v1.ValidateApiKeyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.displayName = 'proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.displayName = 'proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.Metadata.displayName = 'proto.meterus.validation.v1.Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.GetEntitlementValueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.GetEntitlementValueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.GetEntitlementValueRequest.displayName = 'proto.meterus.validation.v1.GetEntitlementValueRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.validation.v1.GetEntitlementValueResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.validation.v1.GetEntitlementValueResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.validation.v1.GetEntitlementValueResponse.displayName = 'proto.meterus.validation.v1.GetEntitlementValueResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.ValidateApiKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.ValidateApiKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requiredScopesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyRequest}
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.ValidateApiKeyRequest;
  return proto.meterus.validation.v1.ValidateApiKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyRequest}
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequiredScopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.ValidateApiKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequiredScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string required_scopes = 1;
 * @return {!Array<string>}
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.getRequiredScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyRequest} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.setRequiredScopesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.validation.v1.ValidateApiKeyRequest} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.addRequiredScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyRequest} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyRequest.prototype.clearRequiredScopesList = function() {
  return this.setRequiredScopesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.ValidateApiKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.ValidateApiKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isValid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    metadata: (f = msg.getMetadata()) && proto.meterus.validation.v1.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyResponse}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.ValidateApiKeyResponse;
  return proto.meterus.validation.v1.ValidateApiKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyResponse}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValid(value);
      break;
    case 2:
      var value = new proto.meterus.validation.v1.Metadata;
      reader.readMessage(value,proto.meterus.validation.v1.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.ValidateApiKeyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.meterus.validation.v1.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool is_valid = 1;
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.getIsValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.setIsValid = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional Metadata metadata = 2;
 * @return {?proto.meterus.validation.v1.Metadata}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.getMetadata = function() {
  return /** @type{?proto.meterus.validation.v1.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.meterus.validation.v1.Metadata, 2));
};


/**
 * @param {?proto.meterus.validation.v1.Metadata|undefined} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyResponse} returns this
*/
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest;
  return proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string feature_key = 1;
 * @return {string}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueRequest.prototype.setFeatureKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasAccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    usage: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    overage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    config: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse;
  return proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasAccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUsage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasAccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool has_access = 1;
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.getHasAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.setHasAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double balance = 2;
 * @return {number}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.setBalance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.clearBalance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double usage = 3;
 * @return {number}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.getUsage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.setUsage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.clearUsage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.hasUsage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double overage = 4;
 * @return {number}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.getOverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.setOverage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.clearOverage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.hasOverage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string config = 5;
 * @return {string}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.setConfig = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.clearConfig = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.ValidateApiKeyAndGetEntitlementValueResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    subject: jspb.Message.getFieldWithDefault(msg, 1, ""),
    additionalAttributes: (f = msg.getAdditionalAttributes()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.Metadata}
 */
proto.meterus.validation.v1.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.Metadata;
  return proto.meterus.validation.v1.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.Metadata}
 */
proto.meterus.validation.v1.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 2:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setAdditionalAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdditionalAttributes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string subject = 1;
 * @return {string}
 */
proto.meterus.validation.v1.Metadata.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.Metadata} returns this
 */
proto.meterus.validation.v1.Metadata.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Struct additional_attributes = 2;
 * @return {?proto.google.protobuf.Struct}
 */
proto.meterus.validation.v1.Metadata.prototype.getAdditionalAttributes = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 2));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.meterus.validation.v1.Metadata} returns this
*/
proto.meterus.validation.v1.Metadata.prototype.setAdditionalAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.validation.v1.Metadata} returns this
 */
proto.meterus.validation.v1.Metadata.prototype.clearAdditionalAttributes = function() {
  return this.setAdditionalAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.Metadata.prototype.hasAdditionalAttributes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.GetEntitlementValueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.GetEntitlementValueRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueRequest}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.GetEntitlementValueRequest;
  return proto.meterus.validation.v1.GetEntitlementValueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.GetEntitlementValueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueRequest}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.GetEntitlementValueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.GetEntitlementValueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string subject_key = 1;
 * @return {string}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.getSubjectKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueRequest} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.setSubjectKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string feature_key = 2;
 * @return {string}
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueRequest} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueRequest.prototype.setFeatureKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.validation.v1.GetEntitlementValueResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.validation.v1.GetEntitlementValueResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hasAccess: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    balance: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    usage: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    overage: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    config: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.validation.v1.GetEntitlementValueResponse;
  return proto.meterus.validation.v1.GetEntitlementValueResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.validation.v1.GetEntitlementValueResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasAccess(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setBalance(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUsage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.validation.v1.GetEntitlementValueResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.validation.v1.GetEntitlementValueResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHasAccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional bool has_access = 1;
 * @return {boolean}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.getHasAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.setHasAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double balance = 2;
 * @return {number}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.getBalance = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.setBalance = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.clearBalance = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double usage = 3;
 * @return {number}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.getUsage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.setUsage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.clearUsage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.hasUsage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double overage = 4;
 * @return {number}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.getOverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.setOverage = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.clearOverage = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.hasOverage = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string config = 5;
 * @return {string}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.setConfig = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.validation.v1.GetEntitlementValueResponse} returns this
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.clearConfig = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.validation.v1.GetEntitlementValueResponse.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.meterus.validation.v1);
