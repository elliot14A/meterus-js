// source: entitlement.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.meterus.entitlement.v1.BooleanEntitlement', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.CreateEntitlementRequest', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.CreateEntitlementRequest.EntitlementDetailsCase', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.Entitlement', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.Entitlement.EntitlementDetailsCase', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.EntitlementId', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.MeteredEntitlement', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.RecurrenceInterval', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.StaticEntitlement', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest', null, global);
goog.exportSymbol('proto.meterus.entitlement.v1.UsagePeriod', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.Entitlement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.meterus.entitlement.v1.Entitlement.oneofGroups_);
};
goog.inherits(proto.meterus.entitlement.v1.Entitlement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.Entitlement.displayName = 'proto.meterus.entitlement.v1.Entitlement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.MeteredEntitlement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.MeteredEntitlement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.MeteredEntitlement.displayName = 'proto.meterus.entitlement.v1.MeteredEntitlement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.StaticEntitlement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.StaticEntitlement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.StaticEntitlement.displayName = 'proto.meterus.entitlement.v1.StaticEntitlement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.BooleanEntitlement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.BooleanEntitlement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.BooleanEntitlement.displayName = 'proto.meterus.entitlement.v1.BooleanEntitlement';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.UsagePeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.UsagePeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.UsagePeriod.displayName = 'proto.meterus.entitlement.v1.UsagePeriod';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.EntitlementId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.EntitlementId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.EntitlementId.displayName = 'proto.meterus.entitlement.v1.EntitlementId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_);
};
goog.inherits(proto.meterus.entitlement.v1.CreateEntitlementRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.CreateEntitlementRequest.displayName = 'proto.meterus.entitlement.v1.CreateEntitlementRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.displayName = 'proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.repeatedFields_, null);
};
goog.inherits(proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.displayName = 'proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.displayName = 'proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.displayName = 'proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.displayName = 'proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.meterus.entitlement.v1.Entitlement.oneofGroups_ = [[4,5,6]];

/**
 * @enum {number}
 */
proto.meterus.entitlement.v1.Entitlement.EntitlementDetailsCase = {
  ENTITLEMENT_DETAILS_NOT_SET: 0,
  METERED: 4,
  STATIC: 5,
  BOOLEAN: 6
};

/**
 * @return {proto.meterus.entitlement.v1.Entitlement.EntitlementDetailsCase}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getEntitlementDetailsCase = function() {
  return /** @type {proto.meterus.entitlement.v1.Entitlement.EntitlementDetailsCase} */(jspb.Message.computeOneofCase(this, proto.meterus.entitlement.v1.Entitlement.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.Entitlement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.Entitlement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.Entitlement.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    subjectKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    featureKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    metered: (f = msg.getMetered()) && proto.meterus.entitlement.v1.MeteredEntitlement.toObject(includeInstance, f),
    pb_static: (f = msg.getStatic()) && proto.meterus.entitlement.v1.StaticEntitlement.toObject(includeInstance, f),
    pb_boolean: (f = msg.getBoolean()) && proto.meterus.entitlement.v1.BooleanEntitlement.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 9, ""),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.Entitlement}
 */
proto.meterus.entitlement.v1.Entitlement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.Entitlement;
  return proto.meterus.entitlement.v1.Entitlement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.Entitlement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.Entitlement}
 */
proto.meterus.entitlement.v1.Entitlement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    case 4:
      var value = new proto.meterus.entitlement.v1.MeteredEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.MeteredEntitlement.deserializeBinaryFromReader);
      msg.setMetered(value);
      break;
    case 5:
      var value = new proto.meterus.entitlement.v1.StaticEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.StaticEntitlement.deserializeBinaryFromReader);
      msg.setStatic(value);
      break;
    case 6:
      var value = new proto.meterus.entitlement.v1.BooleanEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.BooleanEntitlement.deserializeBinaryFromReader);
      msg.setBoolean(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.Entitlement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.Entitlement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.Entitlement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSubjectKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMetered();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.meterus.entitlement.v1.MeteredEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getStatic();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.meterus.entitlement.v1.StaticEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getBoolean();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.meterus.entitlement.v1.BooleanEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string subject_key = 2;
 * @return {string}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getSubjectKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.setSubjectKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string feature_key = 3;
 * @return {string}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.setFeatureKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional MeteredEntitlement metered = 4;
 * @return {?proto.meterus.entitlement.v1.MeteredEntitlement}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getMetered = function() {
  return /** @type{?proto.meterus.entitlement.v1.MeteredEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.MeteredEntitlement, 4));
};


/**
 * @param {?proto.meterus.entitlement.v1.MeteredEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
*/
proto.meterus.entitlement.v1.Entitlement.prototype.setMetered = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.meterus.entitlement.v1.Entitlement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.clearMetered = function() {
  return this.setMetered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.hasMetered = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StaticEntitlement static = 5;
 * @return {?proto.meterus.entitlement.v1.StaticEntitlement}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getStatic = function() {
  return /** @type{?proto.meterus.entitlement.v1.StaticEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.StaticEntitlement, 5));
};


/**
 * @param {?proto.meterus.entitlement.v1.StaticEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
*/
proto.meterus.entitlement.v1.Entitlement.prototype.setStatic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.meterus.entitlement.v1.Entitlement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.clearStatic = function() {
  return this.setStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.hasStatic = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BooleanEntitlement boolean = 6;
 * @return {?proto.meterus.entitlement.v1.BooleanEntitlement}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getBoolean = function() {
  return /** @type{?proto.meterus.entitlement.v1.BooleanEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.BooleanEntitlement, 6));
};


/**
 * @param {?proto.meterus.entitlement.v1.BooleanEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
*/
proto.meterus.entitlement.v1.Entitlement.prototype.setBoolean = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.meterus.entitlement.v1.Entitlement.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.clearBoolean = function() {
  return this.setBoolean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
*/
proto.meterus.entitlement.v1.Entitlement.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
*/
proto.meterus.entitlement.v1.Entitlement.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string created_by = 9;
 * @return {string}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string updated_by = 10;
 * @return {string}
 */
proto.meterus.entitlement.v1.Entitlement.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.Entitlement} returns this
 */
proto.meterus.entitlement.v1.Entitlement.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.MeteredEntitlement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.MeteredEntitlement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.MeteredEntitlement.toObject = function(includeInstance, msg) {
  var f, obj = {
    isSoftLimit: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    overage: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    isUnlimited: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    usagePeriod: (f = msg.getUsagePeriod()) && proto.meterus.entitlement.v1.UsagePeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.MeteredEntitlement;
  return proto.meterus.entitlement.v1.MeteredEntitlement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.MeteredEntitlement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsSoftLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOverage(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUnlimited(value);
      break;
    case 4:
      var value = new proto.meterus.entitlement.v1.UsagePeriod;
      reader.readMessage(value,proto.meterus.entitlement.v1.UsagePeriod.deserializeBinaryFromReader);
      msg.setUsagePeriod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.MeteredEntitlement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.MeteredEntitlement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.MeteredEntitlement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsSoftLimit();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getOverage();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getIsUnlimited();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUsagePeriod();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.meterus.entitlement.v1.UsagePeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool is_soft_limit = 1;
 * @return {boolean}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.getIsSoftLimit = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement} returns this
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.setIsSoftLimit = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional double overage = 2;
 * @return {number}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.getOverage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement} returns this
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.setOverage = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional bool is_unlimited = 3;
 * @return {boolean}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.getIsUnlimited = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement} returns this
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.setIsUnlimited = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional UsagePeriod usage_period = 4;
 * @return {?proto.meterus.entitlement.v1.UsagePeriod}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.getUsagePeriod = function() {
  return /** @type{?proto.meterus.entitlement.v1.UsagePeriod} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.UsagePeriod, 4));
};


/**
 * @param {?proto.meterus.entitlement.v1.UsagePeriod|undefined} value
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement} returns this
*/
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.setUsagePeriod = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.MeteredEntitlement} returns this
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.clearUsagePeriod = function() {
  return this.setUsagePeriod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.MeteredEntitlement.prototype.hasUsagePeriod = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.StaticEntitlement.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.StaticEntitlement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.StaticEntitlement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.StaticEntitlement.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.StaticEntitlement}
 */
proto.meterus.entitlement.v1.StaticEntitlement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.StaticEntitlement;
  return proto.meterus.entitlement.v1.StaticEntitlement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.StaticEntitlement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.StaticEntitlement}
 */
proto.meterus.entitlement.v1.StaticEntitlement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.StaticEntitlement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.StaticEntitlement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.StaticEntitlement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.StaticEntitlement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string config = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.StaticEntitlement.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.StaticEntitlement} returns this
 */
proto.meterus.entitlement.v1.StaticEntitlement.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.BooleanEntitlement.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.BooleanEntitlement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.BooleanEntitlement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.BooleanEntitlement.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.BooleanEntitlement}
 */
proto.meterus.entitlement.v1.BooleanEntitlement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.BooleanEntitlement;
  return proto.meterus.entitlement.v1.BooleanEntitlement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.BooleanEntitlement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.BooleanEntitlement}
 */
proto.meterus.entitlement.v1.BooleanEntitlement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.BooleanEntitlement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.BooleanEntitlement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.BooleanEntitlement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.BooleanEntitlement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool value = 1;
 * @return {boolean}
 */
proto.meterus.entitlement.v1.BooleanEntitlement.prototype.getValue = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.meterus.entitlement.v1.BooleanEntitlement} returns this
 */
proto.meterus.entitlement.v1.BooleanEntitlement.prototype.setValue = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.UsagePeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.UsagePeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UsagePeriod.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: jspb.Message.getFieldWithDefault(msg, 1, 0),
    anchor: (f = msg.getAnchor()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.UsagePeriod}
 */
proto.meterus.entitlement.v1.UsagePeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.UsagePeriod;
  return proto.meterus.entitlement.v1.UsagePeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.UsagePeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.UsagePeriod}
 */
proto.meterus.entitlement.v1.UsagePeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.meterus.entitlement.v1.RecurrenceInterval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAnchor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.UsagePeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.UsagePeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UsagePeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAnchor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional RecurrenceInterval interval = 1;
 * @return {!proto.meterus.entitlement.v1.RecurrenceInterval}
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.getInterval = function() {
  return /** @type {!proto.meterus.entitlement.v1.RecurrenceInterval} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.meterus.entitlement.v1.RecurrenceInterval} value
 * @return {!proto.meterus.entitlement.v1.UsagePeriod} returns this
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp anchor = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.getAnchor = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.entitlement.v1.UsagePeriod} returns this
*/
proto.meterus.entitlement.v1.UsagePeriod.prototype.setAnchor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.UsagePeriod} returns this
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.clearAnchor = function() {
  return this.setAnchor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.UsagePeriod.prototype.hasAnchor = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.EntitlementId.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.EntitlementId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.EntitlementId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.EntitlementId.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitlementId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.EntitlementId}
 */
proto.meterus.entitlement.v1.EntitlementId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.EntitlementId;
  return proto.meterus.entitlement.v1.EntitlementId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.EntitlementId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.EntitlementId}
 */
proto.meterus.entitlement.v1.EntitlementId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntitlementId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.EntitlementId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.EntitlementId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.EntitlementId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.EntitlementId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitlementId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string entitlement_id = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.EntitlementId.prototype.getEntitlementId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.EntitlementId} returns this
 */
proto.meterus.entitlement.v1.EntitlementId.prototype.setEntitlementId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_ = [[3,4,5]];

/**
 * @enum {number}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.EntitlementDetailsCase = {
  ENTITLEMENT_DETAILS_NOT_SET: 0,
  METERED: 3,
  STATIC: 4,
  BOOLEAN: 5
};

/**
 * @return {proto.meterus.entitlement.v1.CreateEntitlementRequest.EntitlementDetailsCase}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getEntitlementDetailsCase = function() {
  return /** @type {proto.meterus.entitlement.v1.CreateEntitlementRequest.EntitlementDetailsCase} */(jspb.Message.computeOneofCase(this, proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.CreateEntitlementRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.CreateEntitlementRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    metered: (f = msg.getMetered()) && proto.meterus.entitlement.v1.MeteredEntitlement.toObject(includeInstance, f),
    pb_static: (f = msg.getStatic()) && proto.meterus.entitlement.v1.StaticEntitlement.toObject(includeInstance, f),
    pb_boolean: (f = msg.getBoolean()) && proto.meterus.entitlement.v1.BooleanEntitlement.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.CreateEntitlementRequest;
  return proto.meterus.entitlement.v1.CreateEntitlementRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.CreateEntitlementRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureKey(value);
      break;
    case 3:
      var value = new proto.meterus.entitlement.v1.MeteredEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.MeteredEntitlement.deserializeBinaryFromReader);
      msg.setMetered(value);
      break;
    case 4:
      var value = new proto.meterus.entitlement.v1.StaticEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.StaticEntitlement.deserializeBinaryFromReader);
      msg.setStatic(value);
      break;
    case 5:
      var value = new proto.meterus.entitlement.v1.BooleanEntitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.BooleanEntitlement.deserializeBinaryFromReader);
      msg.setBoolean(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.CreateEntitlementRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.CreateEntitlementRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMetered();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.meterus.entitlement.v1.MeteredEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getStatic();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.meterus.entitlement.v1.StaticEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getBoolean();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.meterus.entitlement.v1.BooleanEntitlement.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string subject_key = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getSubjectKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setSubjectKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string feature_key = 2;
 * @return {string}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getFeatureKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setFeatureKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional MeteredEntitlement metered = 3;
 * @return {?proto.meterus.entitlement.v1.MeteredEntitlement}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getMetered = function() {
  return /** @type{?proto.meterus.entitlement.v1.MeteredEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.MeteredEntitlement, 3));
};


/**
 * @param {?proto.meterus.entitlement.v1.MeteredEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
*/
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setMetered = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.clearMetered = function() {
  return this.setMetered(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.hasMetered = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional StaticEntitlement static = 4;
 * @return {?proto.meterus.entitlement.v1.StaticEntitlement}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getStatic = function() {
  return /** @type{?proto.meterus.entitlement.v1.StaticEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.StaticEntitlement, 4));
};


/**
 * @param {?proto.meterus.entitlement.v1.StaticEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
*/
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setStatic = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.clearStatic = function() {
  return this.setStatic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.hasStatic = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BooleanEntitlement boolean = 5;
 * @return {?proto.meterus.entitlement.v1.BooleanEntitlement}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getBoolean = function() {
  return /** @type{?proto.meterus.entitlement.v1.BooleanEntitlement} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.BooleanEntitlement, 5));
};


/**
 * @param {?proto.meterus.entitlement.v1.BooleanEntitlement|undefined} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
*/
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setBoolean = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.meterus.entitlement.v1.CreateEntitlementRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.clearBoolean = function() {
  return this.setBoolean(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.hasBoolean = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string created_by = 6;
 * @return {string}
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.CreateEntitlementRequest} returns this
 */
proto.meterus.entitlement.v1.CreateEntitlementRequest.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectKey: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest;
  return proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string subject_key = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.prototype.getSubjectKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest} returns this
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectRequest.prototype.setSubjectKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitlementsList: jspb.Message.toObjectList(msg.getEntitlementsList(),
    proto.meterus.entitlement.v1.Entitlement.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse;
  return proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.meterus.entitlement.v1.Entitlement;
      reader.readMessage(value,proto.meterus.entitlement.v1.Entitlement.deserializeBinaryFromReader);
      msg.addEntitlements(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitlementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.meterus.entitlement.v1.Entitlement.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Entitlement entitlements = 1;
 * @return {!Array<!proto.meterus.entitlement.v1.Entitlement>}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.getEntitlementsList = function() {
  return /** @type{!Array<!proto.meterus.entitlement.v1.Entitlement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.meterus.entitlement.v1.Entitlement, 1));
};


/**
 * @param {!Array<!proto.meterus.entitlement.v1.Entitlement>} value
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse} returns this
*/
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.setEntitlementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.meterus.entitlement.v1.Entitlement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.meterus.entitlement.v1.Entitlement}
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.addEntitlements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.meterus.entitlement.v1.Entitlement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse} returns this
 */
proto.meterus.entitlement.v1.GetEntitlementsOfSubjectResponse.prototype.clearEntitlementsList = function() {
  return this.setEntitlementsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureIdOrSlug: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest;
  return proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubjectKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFeatureIdOrSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureIdOrSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string subject_key = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.getSubjectKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest} returns this
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.setSubjectKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string feature_id_or_slug = 2;
 * @return {string}
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.getFeatureIdOrSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest} returns this
 */
proto.meterus.entitlement.v1.GetEntitlementOfSubjectRequest.prototype.setFeatureIdOrSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entitlementId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    params: (f = msg.getParams()) && proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest;
  return proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntitlementId(value);
      break;
    case 2:
      var value = new proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams;
      reader.readMessage(value,proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntitlementId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.serializeBinaryToWriter
    );
  }
};


/**
 * optional string entitlement_id = 1;
 * @return {string}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.getEntitlementId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} returns this
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.setEntitlementId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UpdateEntitlementUsagePeriodParams params = 2;
 * @return {?proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.getParams = function() {
  return /** @type{?proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} */ (
    jspb.Message.getWrapperField(this, proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams, 2));
};


/**
 * @param {?proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams|undefined} value
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} returns this
*/
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest} returns this
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodRequest.prototype.hasParams = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    interval: jspb.Message.getFieldWithDefault(msg, 1, 0),
    anchor: (f = msg.getAnchor()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams;
  return proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.meterus.entitlement.v1.RecurrenceInterval} */ (reader.readEnum());
      msg.setInterval(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAnchor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInterval();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAnchor();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional RecurrenceInterval interval = 1;
 * @return {!proto.meterus.entitlement.v1.RecurrenceInterval}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.getInterval = function() {
  return /** @type {!proto.meterus.entitlement.v1.RecurrenceInterval} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.meterus.entitlement.v1.RecurrenceInterval} value
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} returns this
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.setInterval = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp anchor = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.getAnchor = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} returns this
*/
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.setAnchor = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams} returns this
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.clearAnchor = function() {
  return this.setAnchor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.entitlement.v1.UpdateEntitlementUsagePeriodParams.prototype.hasAnchor = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.meterus.entitlement.v1.RecurrenceInterval = {
  DAILY: 0,
  WEEKLY: 1,
  MONTHLY: 2,
  QUARTERLY: 3,
  YEARLY: 4
};

goog.object.extend(exports, proto.meterus.entitlement.v1);
