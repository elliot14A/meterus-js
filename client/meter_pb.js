// source: meter.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.meterus.meter.v1.Aggregation', null, global);
goog.exportSymbol('proto.meterus.meter.v1.CloudEvent', null, global);
goog.exportSymbol('proto.meterus.meter.v1.CreateMeterRequest', null, global);
goog.exportSymbol('proto.meterus.meter.v1.FilterGroupValues', null, global);
goog.exportSymbol('proto.meterus.meter.v1.ListMeterSubjectsRequest', null, global);
goog.exportSymbol('proto.meterus.meter.v1.ListMeterSubjectsResponse', null, global);
goog.exportSymbol('proto.meterus.meter.v1.ListMetersRequest', null, global);
goog.exportSymbol('proto.meterus.meter.v1.ListMetersResponse', null, global);
goog.exportSymbol('proto.meterus.meter.v1.Meter', null, global);
goog.exportSymbol('proto.meterus.meter.v1.MeterId', null, global);
goog.exportSymbol('proto.meterus.meter.v1.QueryMeterRequest', null, global);
goog.exportSymbol('proto.meterus.meter.v1.QueryMeterResponse', null, global);
goog.exportSymbol('proto.meterus.meter.v1.QueryMeterRow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.ListMetersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.meter.v1.ListMetersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.ListMetersRequest.displayName = 'proto.meterus.meter.v1.ListMetersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.CloudEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.meter.v1.CloudEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.CloudEvent.displayName = 'proto.meterus.meter.v1.CloudEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.ListMetersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.ListMetersResponse.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.ListMetersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.ListMetersResponse.displayName = 'proto.meterus.meter.v1.ListMetersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.MeterId = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.meter.v1.MeterId, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.MeterId.displayName = 'proto.meterus.meter.v1.MeterId';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.QueryMeterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.QueryMeterRequest.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.QueryMeterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.QueryMeterRequest.displayName = 'proto.meterus.meter.v1.QueryMeterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.FilterGroupValues = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.FilterGroupValues.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.FilterGroupValues, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.FilterGroupValues.displayName = 'proto.meterus.meter.v1.FilterGroupValues';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.meter.v1.ListMeterSubjectsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.ListMeterSubjectsRequest.displayName = 'proto.meterus.meter.v1.ListMeterSubjectsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.ListMeterSubjectsResponse.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.ListMeterSubjectsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.ListMeterSubjectsResponse.displayName = 'proto.meterus.meter.v1.ListMeterSubjectsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.Meter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.Meter.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.Meter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.Meter.displayName = 'proto.meterus.meter.v1.Meter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.CreateMeterRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.CreateMeterRequest.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.CreateMeterRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.CreateMeterRequest.displayName = 'proto.meterus.meter.v1.CreateMeterRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.QueryMeterResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.meterus.meter.v1.QueryMeterResponse.repeatedFields_, null);
};
goog.inherits(proto.meterus.meter.v1.QueryMeterResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.QueryMeterResponse.displayName = 'proto.meterus.meter.v1.QueryMeterResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.meterus.meter.v1.QueryMeterRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.meterus.meter.v1.QueryMeterRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.meterus.meter.v1.QueryMeterRow.displayName = 'proto.meterus.meter.v1.QueryMeterRow';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.ListMetersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.ListMetersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMetersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.ListMetersRequest}
 */
proto.meterus.meter.v1.ListMetersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.ListMetersRequest;
  return proto.meterus.meter.v1.ListMetersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.ListMetersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.ListMetersRequest}
 */
proto.meterus.meter.v1.ListMetersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.ListMetersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.ListMetersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMetersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 limit = 1;
 * @return {number}
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.meter.v1.ListMetersRequest} returns this
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page = 2;
 * @return {number}
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.meter.v1.ListMetersRequest} returns this
 */
proto.meterus.meter.v1.ListMetersRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.CloudEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.CloudEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.CloudEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.CloudEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    source: jspb.Message.getFieldWithDefault(msg, 2, ""),
    specVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, ""),
    time: (f = msg.getTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    subject: jspb.Message.getFieldWithDefault(msg, 6, ""),
    data: (f = msg.getData()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.CloudEvent}
 */
proto.meterus.meter.v1.CloudEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.CloudEvent;
  return proto.meterus.meter.v1.CloudEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.CloudEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.CloudEvent}
 */
proto.meterus.meter.v1.CloudEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpecVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTime(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 7:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.CloudEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.CloudEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.CloudEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.CloudEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpecVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTime();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string source = 2;
 * @return {string}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string spec_version = 3;
 * @return {string}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getSpecVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.setSpecVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string type = 4;
 * @return {string}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp time = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
*/
proto.meterus.meter.v1.CloudEvent.prototype.setTime = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.clearTime = function() {
  return this.setTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.CloudEvent.prototype.hasTime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string subject = 6;
 * @return {string}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Struct data = 7;
 * @return {?proto.google.protobuf.Struct}
 */
proto.meterus.meter.v1.CloudEvent.prototype.getData = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 7));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
*/
proto.meterus.meter.v1.CloudEvent.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.CloudEvent} returns this
 */
proto.meterus.meter.v1.CloudEvent.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.CloudEvent.prototype.hasData = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.ListMetersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.ListMetersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.ListMetersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMetersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metersList: jspb.Message.toObjectList(msg.getMetersList(),
    proto.meterus.meter.v1.Meter.toObject, includeInstance),
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.ListMetersResponse}
 */
proto.meterus.meter.v1.ListMetersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.ListMetersResponse;
  return proto.meterus.meter.v1.ListMetersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.ListMetersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.ListMetersResponse}
 */
proto.meterus.meter.v1.ListMetersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.meterus.meter.v1.Meter;
      reader.readMessage(value,proto.meterus.meter.v1.Meter.deserializeBinaryFromReader);
      msg.addMeters(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.ListMetersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.ListMetersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMetersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.meterus.meter.v1.Meter.serializeBinaryToWriter
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated Meter meters = 1;
 * @return {!Array<!proto.meterus.meter.v1.Meter>}
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.getMetersList = function() {
  return /** @type{!Array<!proto.meterus.meter.v1.Meter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.meterus.meter.v1.Meter, 1));
};


/**
 * @param {!Array<!proto.meterus.meter.v1.Meter>} value
 * @return {!proto.meterus.meter.v1.ListMetersResponse} returns this
*/
proto.meterus.meter.v1.ListMetersResponse.prototype.setMetersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.meterus.meter.v1.Meter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.Meter}
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.addMeters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.meterus.meter.v1.Meter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.ListMetersResponse} returns this
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.clearMetersList = function() {
  return this.setMetersList([]);
};


/**
 * optional uint32 total = 2;
 * @return {number}
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.meter.v1.ListMetersResponse} returns this
 */
proto.meterus.meter.v1.ListMetersResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.MeterId.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.MeterId.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.MeterId} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.MeterId.toObject = function(includeInstance, msg) {
  var f, obj = {
    meterIdOrSlug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.MeterId}
 */
proto.meterus.meter.v1.MeterId.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.MeterId;
  return proto.meterus.meter.v1.MeterId.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.MeterId} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.MeterId}
 */
proto.meterus.meter.v1.MeterId.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeterIdOrSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.MeterId.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.MeterId.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.MeterId} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.MeterId.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeterIdOrSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string meter_id_or_slug = 1;
 * @return {string}
 */
proto.meterus.meter.v1.MeterId.prototype.getMeterIdOrSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.MeterId} returns this
 */
proto.meterus.meter.v1.MeterId.prototype.setMeterIdOrSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.QueryMeterRequest.repeatedFields_ = [4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.QueryMeterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.QueryMeterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    meterIdOrSlug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    subjectList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    filterGroupByMap: (f = msg.getFilterGroupByMap()) ? f.toObject(includeInstance, proto.meterus.meter.v1.FilterGroupValues.toObject) : [],
    groupByList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    windowSize: jspb.Message.getFieldWithDefault(msg, 7, ""),
    windowTimeZone: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest}
 */
proto.meterus.meter.v1.QueryMeterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.QueryMeterRequest;
  return proto.meterus.meter.v1.QueryMeterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.QueryMeterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest}
 */
proto.meterus.meter.v1.QueryMeterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeterIdOrSlug(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubject(value);
      break;
    case 5:
      var value = msg.getFilterGroupByMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.meterus.meter.v1.FilterGroupValues.deserializeBinaryFromReader, "", new proto.meterus.meter.v1.FilterGroupValues());
         });
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindowSize(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindowTimeZone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.QueryMeterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.QueryMeterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeterIdOrSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSubjectList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFilterGroupByMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.meterus.meter.v1.FilterGroupValues.serializeBinaryToWriter);
  }
  f = message.getGroupByList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getWindowSize();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getWindowTimeZone();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string meter_id_or_slug = 1;
 * @return {string}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getMeterIdOrSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.setMeterIdOrSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
*/
proto.meterus.meter.v1.QueryMeterRequest.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
*/
proto.meterus.meter.v1.QueryMeterRequest.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string subject = 4;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getSubjectList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.setSubjectList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.addSubject = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.clearSubjectList = function() {
  return this.setSubjectList([]);
};


/**
 * map<string, FilterGroupValues> filter_group_by = 5;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.meterus.meter.v1.FilterGroupValues>}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getFilterGroupByMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.meterus.meter.v1.FilterGroupValues>} */ (
      jspb.Message.getMapField(this, 5, opt_noLazyCreate,
      proto.meterus.meter.v1.FilterGroupValues));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.clearFilterGroupByMap = function() {
  this.getFilterGroupByMap().clear();
  return this;};


/**
 * repeated string group_by = 6;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getGroupByList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.setGroupByList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.addGroupBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.clearGroupByList = function() {
  return this.setGroupByList([]);
};


/**
 * optional string window_size = 7;
 * @return {string}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getWindowSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.setWindowSize = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string window_time_zone = 8;
 * @return {string}
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.getWindowTimeZone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.QueryMeterRequest} returns this
 */
proto.meterus.meter.v1.QueryMeterRequest.prototype.setWindowTimeZone = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.FilterGroupValues.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.FilterGroupValues.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.FilterGroupValues} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.FilterGroupValues.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.FilterGroupValues}
 */
proto.meterus.meter.v1.FilterGroupValues.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.FilterGroupValues;
  return proto.meterus.meter.v1.FilterGroupValues.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.FilterGroupValues} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.FilterGroupValues}
 */
proto.meterus.meter.v1.FilterGroupValues.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.FilterGroupValues.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.FilterGroupValues} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.FilterGroupValues.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.FilterGroupValues} returns this
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.FilterGroupValues} returns this
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.FilterGroupValues} returns this
 */
proto.meterus.meter.v1.FilterGroupValues.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.ListMeterSubjectsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    meterIdOrSlug: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsRequest}
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.ListMeterSubjectsRequest;
  return proto.meterus.meter.v1.ListMeterSubjectsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsRequest}
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeterIdOrSlug(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.ListMeterSubjectsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeterIdOrSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string meter_id_or_slug = 1;
 * @return {string}
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.prototype.getMeterIdOrSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsRequest} returns this
 */
proto.meterus.meter.v1.ListMeterSubjectsRequest.prototype.setMeterIdOrSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.ListMeterSubjectsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    subjectsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    total: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.ListMeterSubjectsResponse;
  return proto.meterus.meter.v1.ListMeterSubjectsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addSubjects(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.ListMeterSubjectsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.ListMeterSubjectsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSubjectsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * repeated string subjects = 1;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.getSubjectsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse} returns this
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.setSubjectsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse} returns this
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.addSubjects = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse} returns this
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.clearSubjectsList = function() {
  return this.setSubjectsList([]);
};


/**
 * optional int32 total = 2;
 * @return {number}
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.meter.v1.ListMeterSubjectsResponse} returns this
 */
proto.meterus.meter.v1.ListMeterSubjectsResponse.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.Meter.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.Meter.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.Meter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.Meter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.Meter.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slug: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    aggregation: jspb.Message.getFieldWithDefault(msg, 4, 0),
    valueProperty: jspb.Message.getFieldWithDefault(msg, 5, ""),
    groupByList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    eventType: jspb.Message.getFieldWithDefault(msg, 7, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.Meter}
 */
proto.meterus.meter.v1.Meter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.Meter;
  return proto.meterus.meter.v1.Meter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.Meter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.Meter}
 */
proto.meterus.meter.v1.Meter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {!proto.meterus.meter.v1.Aggregation} */ (reader.readEnum());
      msg.setAggregation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueProperty(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.Meter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.Meter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.Meter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.Meter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAggregation();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGroupByList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string slug = 2;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.Meter.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Aggregation aggregation = 4;
 * @return {!proto.meterus.meter.v1.Aggregation}
 */
proto.meterus.meter.v1.Meter.prototype.getAggregation = function() {
  return /** @type {!proto.meterus.meter.v1.Aggregation} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.meterus.meter.v1.Aggregation} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setAggregation = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string value_property = 5;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getValueProperty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setValueProperty = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.clearValueProperty = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.Meter.prototype.hasValueProperty = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string group_by = 6;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.Meter.prototype.getGroupByList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setGroupByList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.addGroupBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.clearGroupByList = function() {
  return this.setGroupByList([]);
};


/**
 * optional string event_type = 7;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string created_by = 8;
 * @return {string}
 */
proto.meterus.meter.v1.Meter.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.Meter.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.Meter} returns this
*/
proto.meterus.meter.v1.Meter.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.Meter} returns this
 */
proto.meterus.meter.v1.Meter.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.Meter.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.CreateMeterRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.CreateMeterRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.CreateMeterRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.CreateMeterRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    slug: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    valueProperty: jspb.Message.getFieldWithDefault(msg, 3, ""),
    aggregation: jspb.Message.getFieldWithDefault(msg, 4, 0),
    groupByList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    createdBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.CreateMeterRequest}
 */
proto.meterus.meter.v1.CreateMeterRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.CreateMeterRequest;
  return proto.meterus.meter.v1.CreateMeterRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.CreateMeterRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.CreateMeterRequest}
 */
proto.meterus.meter.v1.CreateMeterRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSlug(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueProperty(value);
      break;
    case 4:
      var value = /** @type {!proto.meterus.meter.v1.Aggregation} */ (reader.readEnum());
      msg.setAggregation(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupBy(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.CreateMeterRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.CreateMeterRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.CreateMeterRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSlug();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAggregation();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getGroupByList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string slug = 1;
 * @return {string}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getSlug = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setSlug = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string value_property = 3;
 * @return {string}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getValueProperty = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setValueProperty = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.clearValueProperty = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.hasValueProperty = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Aggregation aggregation = 4;
 * @return {!proto.meterus.meter.v1.Aggregation}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getAggregation = function() {
  return /** @type {!proto.meterus.meter.v1.Aggregation} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.meterus.meter.v1.Aggregation} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setAggregation = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * repeated string group_by = 5;
 * @return {!Array<string>}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getGroupByList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setGroupByList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.addGroupBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.clearGroupByList = function() {
  return this.setGroupByList([]);
};


/**
 * optional string created_by = 6;
 * @return {string}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string event_type = 7;
 * @return {string}
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.getEventType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.CreateMeterRequest} returns this
 */
proto.meterus.meter.v1.CreateMeterRequest.prototype.setEventType = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.meterus.meter.v1.QueryMeterResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.QueryMeterResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.QueryMeterResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.meterus.meter.v1.QueryMeterRow.toObject, includeInstance),
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    windowSize: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.QueryMeterResponse}
 */
proto.meterus.meter.v1.QueryMeterResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.QueryMeterResponse;
  return proto.meterus.meter.v1.QueryMeterResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.QueryMeterResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.QueryMeterResponse}
 */
proto.meterus.meter.v1.QueryMeterResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.meterus.meter.v1.QueryMeterRow;
      reader.readMessage(value,proto.meterus.meter.v1.QueryMeterRow.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWindowSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.QueryMeterResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.QueryMeterResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.meterus.meter.v1.QueryMeterRow.serializeBinaryToWriter
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getWindowSize();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated QueryMeterRow data = 1;
 * @return {!Array<!proto.meterus.meter.v1.QueryMeterRow>}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.meterus.meter.v1.QueryMeterRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.meterus.meter.v1.QueryMeterRow, 1));
};


/**
 * @param {!Array<!proto.meterus.meter.v1.QueryMeterRow>} value
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
*/
proto.meterus.meter.v1.QueryMeterResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.meterus.meter.v1.QueryMeterRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.meterus.meter.v1.QueryMeterRow}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.meterus.meter.v1.QueryMeterRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional google.protobuf.Timestamp from = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
*/
proto.meterus.meter.v1.QueryMeterResponse.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp to = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
*/
proto.meterus.meter.v1.QueryMeterResponse.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.hasTo = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string window_size = 4;
 * @return {string}
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.getWindowSize = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.meterus.meter.v1.QueryMeterResponse} returns this
 */
proto.meterus.meter.v1.QueryMeterResponse.prototype.setWindowSize = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.toObject = function(opt_includeInstance) {
  return proto.meterus.meter.v1.QueryMeterRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.meterus.meter.v1.QueryMeterRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    to: (f = msg.getTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    groupBy: (f = msg.getGroupBy()) && google_protobuf_struct_pb.Struct.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.meterus.meter.v1.QueryMeterRow}
 */
proto.meterus.meter.v1.QueryMeterRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.meterus.meter.v1.QueryMeterRow;
  return proto.meterus.meter.v1.QueryMeterRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.meterus.meter.v1.QueryMeterRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.meterus.meter.v1.QueryMeterRow}
 */
proto.meterus.meter.v1.QueryMeterRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 4:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.setGroupBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.meterus.meter.v1.QueryMeterRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.meterus.meter.v1.QueryMeterRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.meterus.meter.v1.QueryMeterRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getGroupBy();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp from = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.getFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
*/
proto.meterus.meter.v1.QueryMeterRow.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp to = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.getTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
*/
proto.meterus.meter.v1.QueryMeterRow.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double value = 3;
 * @return {number}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional google.protobuf.Struct group_by = 4;
 * @return {?proto.google.protobuf.Struct}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.getGroupBy = function() {
  return /** @type{?proto.google.protobuf.Struct} */ (
    jspb.Message.getWrapperField(this, google_protobuf_struct_pb.Struct, 4));
};


/**
 * @param {?proto.google.protobuf.Struct|undefined} value
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
*/
proto.meterus.meter.v1.QueryMeterRow.prototype.setGroupBy = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.meterus.meter.v1.QueryMeterRow} returns this
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.clearGroupBy = function() {
  return this.setGroupBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.meterus.meter.v1.QueryMeterRow.prototype.hasGroupBy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * @enum {number}
 */
proto.meterus.meter.v1.Aggregation = {
  AGGREGATION_COUNT: 0,
  AGGREGATION_SUM: 1,
  AGGREGATION_AVG: 2,
  AGGREGATION_UNIQUE_COUNT: 3,
  AGGREGATION_MIN: 4,
  AGGREGATION_MAX: 5
};

goog.object.extend(exports, proto.meterus.meter.v1);
